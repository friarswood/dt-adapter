# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build, lint and test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SENSOR_STUB: 1

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: "pip: Python ${{ matrix.python-version }}"
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pybind11 pytest flake8
    - name: Build
      run: |
        python -m pip install -e .
    - name: Lint with flake8
      run: |
        flake8 .
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: test
      run: |
        python -m pytest
    # - name: package
    #   run: |
    #     python setup.py bdist_wheel
    # - name: artifacts
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: dt_adapter_${{ matrix.python-version }}
    #     path: |
    #       dist
    - name: slack-notify
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,commit,repo,ref,author,message
        custom_payload: |
          {
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `*${process.env.AS_REPO}*\n${process.env.AS_WORKFLOW} ${{ matrix.python-version }}: *${{ job.status }}*\nCommit ${process.env.AS_COMMIT} by ${process.env.AS_AUTHOR}:\n_${process.env.AS_MESSAGE}_`,
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()